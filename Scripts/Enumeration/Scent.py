"""
A stable version of Scent - Will probably be deleted as changes are merged.
"""
import pyfiglet
import socket
import time


ascii_art = pyfiglet.figlet_format("Scent", font = "isometric1")

def open_port(host, port, timeout = 0.2):
    socket = input("Enter the type of socket (TCP/UDP): ")
    if socket == "TCP":
        socket = socket.SOCK_STREAM
    elif socket == "UDP":
        socket = socket.SOCK_DGRAM
    else:
        print("Invalid socket type. Please enter TCP or UDP.")
        print(socket)
    timeout = input("Enter the timeout value (default is 0.2s): ")
    s = socket.socket(socket.AF_INET, socket)
    global start_time
    start_time = time.time()
    print(f"\nScan started...\n")
    try:
        s.connect((host, port))
        s.settimeout(timeout)
    except:
        # Closed port
        return False

print(ascii_art)
print("----------------------------------------------------------------------")
print(f"Welcome to Scent - A straightforward enumeration tool")
print("----------------------------------------------------------------------")

selection = input("What would you like to do? (1 to ping, 2 for port scaning): ")

if selection == "1":
    pass
if selection == "2":
    verbose = input("\nWould you like to view closed ports? (Y to view, N to skip): ")
    host = input("Enter the host to scan: ")
    host = socket.gethostbyname(host)

    for port in range(1, 1026): # Max 65535
        if open_port(host, port):
            print(f"Port {port} is open | Service: {socket.getservbyport(port)}")
            if verbose == "Y":
                    print(f"Port {port} is closed")
            elif verbose == "N":
                continue
        else:
            pass #EXT

    end_time = time.time()
    print(f"\nScan completed in just {round(end_time - start_time)} seconds!")

selection = input("What would you like to do? (1 to ping, 2 for port scaning): ")
...